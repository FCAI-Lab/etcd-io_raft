// Code generated by cmd/cgo; DO NOT EDIT.

package quorum

import "unsafe"

import "syscall"

import _cgopackage "runtime/cgo"

type _ _cgopackage.Incomplete
var _ syscall.Errno
func _Cgo_ptr(ptr unsafe.Pointer) unsafe.Pointer { return ptr }

//go:linkname _Cgo_always_false runtime.cgoAlwaysFalse
var _Cgo_always_false bool
//go:linkname _Cgo_use runtime.cgoUse
func _Cgo_use(interface{})
//go:linkname _Cgo_no_callback runtime.cgoNoCallback
func _Cgo_no_callback(bool)
type _Ctype__GoString_ string

type _Ctype_char int8

type _Ctype_int int32

type _Ctype_intgo = _Ctype_ptrdiff_t

type _Ctype_long int64

type _Ctype_ptrdiff_t = _Ctype_long

type _Ctype_uint64_t = _Ctype_ulonglong

type _Ctype_ulonglong uint64

type _Ctype_void [0]byte

//go:linkname _cgo_runtime_cgocall runtime.cgocall
func _cgo_runtime_cgocall(unsafe.Pointer, uintptr) int32

//go:linkname _cgoCheckPointer runtime.cgoCheckPointer
//go:noescape
func _cgoCheckPointer(interface{}, interface{})

//go:linkname _cgoCheckResult runtime.cgoCheckResult
//go:noescape
func _cgoCheckResult(interface{})


//go:linkname _cgo_runtime_gostring runtime.gostring
func _cgo_runtime_gostring(*_Ctype_char) string

// GoString converts the C string p into a Go string.
func _Cfunc_GoString(p *_Ctype_char) string {
	return _cgo_runtime_gostring(p)
}
//go:cgo_export_dynamic AckedIndexC
//go:linkname _cgoexp_c6cfbd27125d_AckedIndexC _cgoexp_c6cfbd27125d_AckedIndexC
//go:cgo_export_static _cgoexp_c6cfbd27125d_AckedIndexC
func _cgoexp_c6cfbd27125d_AckedIndexC(a *struct {
		p0 unsafe.Pointer
		p1 _Ctype_uint64_t
		p2 *_Ctype_uint64_t
		p3 unsafe.Pointer
	}) {
	AckedIndexC(a.p0, a.p1, a.p2, a.p3)
}
